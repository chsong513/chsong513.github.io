<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Deep Knowledge Tracing [CODE]</title>
    <url>/20201124_DKT-Pytorch/index.html</url>
    <content><![CDATA[<p><img src="http://img.chsong.live/Blogs/DKT-pytorch/1.png-o" alt="DKT"></p>
<p>知识追踪（Knowledge Tracing）是根据学生过去的答题情况对学生的知识掌握情况进行建模，从而得到学生当前知识状态表示的一种技术。将深度学习的方法引入知识追踪最早出现于发表在NeurIPS 2015上的一篇论文《Deep Knowledge Tracing》，作者来自斯坦福大学。在这篇论文中，作者提出了使用深度知识追踪（Deep Knowledge Tracing, DKT）的概念，利用RNN对学生的学习情况进行建模，之后引出了一系列工作，2019年已经有使用Transformer代替RNN和LSTM并且达到了SOTA的论文。DKT作为知识追踪模型深度化的开山之作，在几乎所有的深度知识追踪模型中都作为baseline，而DKT作者给出的模型实现是基于lua语言的，为了能够让更多的研究人员更方便的使用，这里给出一种python的实现，采用的是pytorch框架。</p>
<a id="more"></a>]]></content>
      <tags>
        <tag>算法</tag>
        <tag>科研</tag>
      </tags>
  </entry>
  <entry>
    <title>游戏实时胜率预测</title>
    <url>/20201123_%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/index.html</url>
    <content><![CDATA[<p><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/winprob.png-o" alt=""></p>
<p>在游戏过程中进行实时胜率预测，能够为观战者、解说提供话题引导和需求。实时胜率预测系统目前 在游戏赛事的观战直播领域已经出现一些应用尝试。肯德基KI上校、DOTA PLUS胜率预测面板，已经在LOL和DOTA玩家中取得了良好的反馈。通过战斗的实时胜率预测，不仅可以制造话题为比赛带来乐趣，也可以通过事后回顾，分析对局中的得失，提升竞技实力，对游戏玩法参与感和体验，是一种革新。</p>
<a id="more"></a>

<p>本文是一个关于游戏实时胜率预测ppt的介绍，这个ppt是我在实验室一次大分享上的报告。此ppt主要包括四个部分：背景介绍、相关工作、我们的工作、以及总结。其中我们的工作，是我之前在网易实习时所作的一项研究，是关于<a href="http://n.163.com" target="_blank" rel="noopener">逆水寒</a>游戏实时胜率预测的工作。</p>
<table>
<thead>
<tr>
<th align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/1.png-m" alt=""></th>
<th align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/2.png-m" alt=""></th>
</tr>
</thead>
</table>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>首先是介绍了一下游戏背景部分，主要包括当前全球游戏市场的现状、游戏对学术界的影响、游戏在产业界的应用。然后引出实时胜率预测的应用及其重要性，最后总结实时胜率预测及其相关的延伸问题。</p>
<table>
<thead>
<tr>
<th align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/3.png-m" alt=""></th>
<th align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/4.png-m" alt=""></th>
<th align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/5.png-m" alt=""></th>
</tr>
</thead>
<tbody><tr>
<td align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/6.png-m" alt=""></td>
<td align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/7.png-m" alt=""></td>
<td align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/8.png-m" alt=""></td>
</tr>
</tbody></table>
<h3 id="相关工作"><a href="#相关工作" class="headerlink" title="相关工作"></a>相关工作</h3><p>然后是相关工作部分，从两个方面来介绍。一方面是简要回顾了一下传统的统计学方法比如BT算法、ELo机制等。另一方面是介绍基于深度学习的方法。挑了三个比较有代表性的研究进行相对详细的介绍，一个是基于英雄联盟游戏视频的高光时刻生成、一个是基于王者荣耀游戏视频的无监督高光片段检测框架、另一个是足球运动员动作价值评估。</p>
<table>
<thead>
<tr>
<th align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/9.png-m" alt=""></th>
<th align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/10.png-m" alt=""></th>
<th align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/11.png-m" alt=""></th>
</tr>
</thead>
<tbody><tr>
<td align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/12.png-m" alt=""></td>
<td align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/13.png-m" alt=""></td>
<td align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/14.png-m" alt=""></td>
</tr>
<tr>
<td align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/15.png-m" alt=""></td>
<td align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/16.png-m" alt=""></td>
<td align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/17.png-m" alt=""></td>
</tr>
</tbody></table>
<h3 id="我们的工作"><a href="#我们的工作" class="headerlink" title="我们的工作"></a>我们的工作</h3><p>我们的工作主要是基于逆水寒游戏数据，研究实时胜率预测模型。所作的工作主要包括三个步骤，首先基于shapely value对数据进行了分析，分析游戏中不同角色的数量对游戏结果的影响；然后采用LR、XGboost等方法进行实时胜率预测实验，效果挺好，但是可解释性不足。后来将数据处理成图片形式，还原游戏对局原貌，采用CNN实现胜率预测，并通过热力图提供强解释性。</p>
<table>
<thead>
<tr>
<th align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/18.png-m" alt=""></th>
<th align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/19.png-m" alt=""></th>
<th align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/20.png-m" alt=""></th>
</tr>
</thead>
<tbody><tr>
<td align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/21.png-m" alt=""></td>
<td align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/22.png-m" alt=""></td>
<td align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/23.png-m" alt=""></td>
</tr>
</tbody></table>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>最后总结了一下基于游戏实时胜率预测的可能的研究方向，主要包括：关键点识别、高光时刻检测、实时胜率的可解释性、战报自动生成、战场数据表征等。</p>
<table>
<thead>
<tr>
<th align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/24.png-m" alt=""></th>
<th align="center"><img src="https://img.chsong.live/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/25.png-m" alt=""></th>
</tr>
</thead>
</table>
<p>原ppt可以在<a href="http://chengsong-img.oss-cn-hangzhou.aliyuncs.com/Blogs/%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B/20201015%E5%A4%A7%E5%88%86%E4%BA%AB%E5%AE%9E%E6%97%B6%E8%83%9C%E7%8E%87%E9%A2%84%E6%B5%8B.pptx" target="_blank" rel="noopener">此处</a>下载。</p>
]]></content>
      <tags>
        <tag>科研</tag>
      </tags>
  </entry>
  <entry>
    <title>智能化教育与隐私保护</title>
    <url>/20201123_%E6%99%BA%E8%83%BD%E5%8C%96%E6%95%99%E8%82%B2%E4%B8%8E%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4/index.html</url>
    <content><![CDATA[<p><img src="https://imgs.ebrun.com/resources/2018_01/2018_01_09/2018010914915154810164470.jpg" alt=""></p>
<p>人工智能不仅是一场技术革命和产业革命，更是一场数据革命。为了不断提升智能化水平，必定有越来越多的数据被收集。<a id="more"></a>在智能教育领域，学习者等相关的主体都已被卷入这场声势浩大的数据革命之中。如何在发展智能教育的同时，实现对学习者数据在存储、共享、使用过程中隐私的保护，必定会成为智能教育时代的主题。目前，智能教育和隐私保护之间的平衡性仍处于基础设想阶段。本人及课题组基于教育领域的数据特征，结合隐私保护相关法律法规、伦理道德，界定不同的隐私及隐私程度；从智能教育实施的整个流程所涉及的数据采集、存储与传输、共享与使用等环节来分析隐私泄露的可能性，同时研究具体的实现隐私保护的相关技术。研究结果对于合理发挥教育数据的价值进而提升智能教育水平具有重要意义；为教育的公平性、相关立法、教育领域大数据防火墙的构筑等提供了新的指导。</p>
]]></content>
      <tags>
        <tag>科研</tag>
      </tags>
  </entry>
  <entry>
    <title>再见</title>
    <url>/20201103_%E5%86%8D%E8%A7%81/index.html</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">您好, 这里需要密码.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="bf66d1a238f8c7953e6e7753a591a33d504129fd40acffdf0bc8eba7b8cff824"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>动态</tag>
      </tags>
  </entry>
  <entry>
    <title>牛客-公平划分</title>
    <url>/20200712_%E5%85%AC%E5%B9%B3%E5%88%92%E5%88%86/index.html</url>
    <content><![CDATA[<p>牛客网系统上的测试用例经常有问题，比如这一题，输入数据有问题。一般情况下，代码完全正确只能通过80%的case。必须对有问题的输入针对性处理才能通过。</p>
<a id="more"></a>

<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>小爱和小溪有N个数字，他们两个想公平的分配这些数字。小爱拿的数字集合为$I = [i_1, i_2, i_K]$，小溪获得剩下的$J=[j_1, j_2, j_{N-K} ]$。但是他们衡量分配公平与否的原则与众不同:<br>$$<br>f(I) = \sum_{i\in I}\sum_{j\in J}|a_i-a_j|<br>$$<br>在小爱拿到其中的K个数字的前提下，计算出他们分配偏差$f(I)$的最小值。</p>
<h4 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h4><blockquote>
<p>输入第一行两个数字，分别表示总的数字量N和小爱拿的数字量K。第二行有N个数字，表示每个数字的值。</p>
</blockquote>
<h4 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h4><blockquote>
<p>输出一个数字，表示分配偏差f(I)的最小值。</p>
</blockquote>
<h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>输入</p>
<blockquote>
<p>4 1</p>
<p>3 3 3 1</p>
</blockquote>
<p>输出</p>
<blockquote>
<p>2</p>
</blockquote>
<h3 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h3><p>牛客官网给的提示是 <strong>动态规划</strong>和<strong>穷举</strong>，我没有想出动态规划的方案，这里用<strong>穷举</strong>的方式可以通过。</p>
<p>对于给定的N个数，小爱同学拿了其中的K个数，那么也就是从N个数中取出K个数，共有$\tbinom{N}{K}$种情况。遍历这$\tbinom{N}{K}$种情况，得到最小的$f(I)$即为最后的答案。</p>
<p>那么问题就转化成了求N个数中取K个数的所有组合情况，本题用combination(data, r)函数，data为list类型数据，r表示从data中取出r个数。combination函数能够返回所有的r个数的组合。关于组合函数combination(data, r)的详解可以看文章<strong>列表排列组合</strong>（撰写中…）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">combination</span><span class="params">(data, r)</span>:</span></span><br><span class="line">    n = len(data)</span><br><span class="line">    index = list(range(r))</span><br><span class="line">    <span class="keyword">yield</span> set(index)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> reversed(range(r)):</span><br><span class="line">            <span class="keyword">if</span> index[i] &lt; n - r + i:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        index[i] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, r):</span><br><span class="line">            index[j] = index[j<span class="number">-1</span>] + <span class="number">1</span></span><br><span class="line">        <span class="keyword">yield</span> set(index)</span><br></pre></td></tr></table></figure>

<p>首先，获得小爱同学的K个数的所有情况sets1 = combination(data, K)，这里combination返回的是python中的生成器，需要通过如下形式迭代形式访问每一种情况：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> set1 <span class="keyword">in</span> sets1:</span><br><span class="line">	...</span><br></pre></td></tr></table></figure>

<p>这里每一个set1就表示小爱同学的一种取K个数的情况，那么用所有的N个数剔除set1中的数，剩余的数构成set2就是小溪同学的N-K个数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">set2 = set(range(N)) - set1</span><br></pre></td></tr></table></figure>

<p>然后求分配偏差</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bias = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> set1:</span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> set2:</span><br><span class="line">		bias += abs(data[i] - data[j])</span><br></pre></td></tr></table></figure>

<p>判断是否比当前的最小偏差小</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">min_bias = min(min_bias, bias)</span><br></pre></td></tr></table></figure>

<p>最后输出min_bias。</p>
<h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">combination</span><span class="params">(data, r)</span>:</span></span><br><span class="line">    n = len(data)</span><br><span class="line">    index = list(range(r))</span><br><span class="line">    <span class="keyword">yield</span> set(index)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> reversed(range(r)):</span><br><span class="line">            <span class="keyword">if</span> index[i] &lt; n - r + i:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        index[i] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, r):</span><br><span class="line">            index[j] = index[j<span class="number">-1</span>] + <span class="number">1</span></span><br><span class="line">        <span class="keyword">yield</span> set(index)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">########## N, K 输入 ############</span></span><br><span class="line">    line1 = input().strip(<span class="string">''</span>).split(<span class="string">' '</span>)</span><br><span class="line">    N, K = int(line1[<span class="number">0</span>]), int(line1[<span class="number">1</span>])</span><br><span class="line">    <span class="comment">################################</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> N &lt;= <span class="number">0</span> <span class="keyword">or</span> K &lt;= <span class="number">0</span>:</span><br><span class="line">        print(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    line2 = input().strip(<span class="string">''</span>).split(<span class="string">' '</span>)</span><br><span class="line">    data = [int(e) <span class="keyword">for</span> e <span class="keyword">in</span> line2]</span><br><span class="line">    </span><br><span class="line">    min_bias = sys.maxsize</span><br><span class="line">    </span><br><span class="line">    sets1 = combination(data, K)</span><br><span class="line">    <span class="keyword">for</span> set1 <span class="keyword">in</span> sets1:</span><br><span class="line">        set2 = set(range(N)) - set1</span><br><span class="line">        bias = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> set1:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> set2:</span><br><span class="line">                bias += abs(data[i] - data[j])</span><br><span class="line">        min_bias = min(min_bias, bias)</span><br><span class="line">    print(min_bias)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<p>正常情况下，上述代码是完全正确的。可是有的测试用例有问题，N和K应改是同一行输入的，有的测试用例N和K分两行输入。</p>
<p><strong>正常测试用例：</strong></p>
<blockquote>
<p>N, K</p>
<p>d1 d2 d3 … dN</p>
</blockquote>
<p><strong>异常测试用例：</strong></p>
<blockquote>
<p>N</p>
<p>K</p>
<p>d1 d2 d3 … dN</p>
</blockquote>
<p>因此，如果要提交通过的话，需要将上面N，K输入部分，替换成面的代码。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dim = list(map(int, input().split()))</span><br><span class="line"><span class="keyword">if</span> len(dim) == <span class="number">2</span>:</span><br><span class="line">	N = dim[<span class="number">0</span>]</span><br><span class="line">	K = dim[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">	N = dim[<span class="number">0</span>]</span><br><span class="line">	K = int(input())</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>算法</tag>
        <tag>牛客网</tag>
      </tags>
  </entry>
  <entry>
    <title>牛客-商品交易</title>
    <url>/20200710_%E5%95%86%E5%93%81%E4%BA%A4%E6%98%93/index.html</url>
    <content><![CDATA[<p>这题在牛客网上标签有<strong>动态规划</strong>和<strong>贪心</strong>，因此，用可以用动态规划和贪心两种算法来解决。</p>
<a id="more"></a>

<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>珐达采下个月要去鸥洲各国考察一趟，采购流通神秘石并从中搞点油水。<br>珐达采会按顺序依次经过序号分别为$1, 2, 3, …, n$的鸥洲国家，在第i个国家神秘石的流通价格为$A_i$鸥。因为行程紧张，在每个国家的停留时间有限，所以他只能花费$A_i$鸥买入一块神秘石，或者卖出一块手中的神秘石获得$A_i$鸥，或者什么都不做，而且因为神秘石的保存需要极其先进的高级材料容器，其材料稀有且制作困难，珐达采只有一份容器，故无论何时珐达采手里 最多只能拥有一块神秘石。<br>珐达采想知道最终能从中获利最大多少鸥。因为交易需要手续费，所以珐达采还想知道在获利最大收益的同时，最少需要交易多少次。因为珐达采是大财阀，所以你可以认为他一开始金钱无限。</p>
<h4 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h4><blockquote>
<p>第一行一个数$n$。$1\le n \le 100000$</p>
<p>第二行n$n$数，第$i$个数表示$A_i$。$1\le A_i \le 1e9$</p>
</blockquote>
<h4 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h4><blockquote>
<p>共一行，两个数，分别代表最大收益和对应的最少交易次数。</p>
</blockquote>
<h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>s输入</p>
<blockquote>
<p>5<br>9 7 10 1 5</p>
</blockquote>
<p>输出</p>
<blockquote>
<p>7 4</p>
</blockquote>
<h3 id="方法分析"><a href="#方法分析" class="headerlink" title="方法分析"></a>方法分析</h3><p>初步分析后，此题的意思就是，给定$N$个数，按顺序依次经过这$N$个数，当处于第$i$个数的时候，可以以第$i$个数为价格买进或者卖出宝石，有一个限制条件就是手里最多只能买进1个宝石。</p>
<h4 id="暴力穷举"><a href="#暴力穷举" class="headerlink" title="暴力穷举"></a>暴力穷举</h4><p>那么每经过一个数的时候，有且只有三种操作：1-买宝石，2-卖宝石，3-不买也不卖。定义从第一个数到最后一个数，对每一个数所作的操作构成的序列称为一个操作序列。因此，给定N个数，最多有$3^N$个操作序列，当然其中肯定有不合理的序列（简便起见，不作过多解释），那么用暴力穷举的算法，时间复杂度接近于$O(3^N)$。</p>
<h4 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h4><p>动态规划算法最核心的要素有两点：<strong>状态；状态转移方程；</strong><br>状态选取的好坏有时候可以决定这个问题能否被解决。一般状态的选取要满足两个条件：<br><strong>1. 最优子结构</strong><br><strong>子结构</strong>：子结构指的是，一个问题可以分解为多个多个子问题，每一个子问题就称为一个子结构，而子问题又能分解为更小的子问题，形成更小的子结构。<br><strong>最优子结构</strong>：每一个问题或子问题的最优值，都能够有各自的子问题的最优解推导而来。而每一个子问题的最优解即为<strong>状态</strong>。<br><strong>2. 无后效性</strong><br><strong>无后效性</strong>：无后效性指的是，我们只关心每一个子问题的最优值<strong>是多少</strong>，而不关心这个最优值是<strong>怎么来的</strong>。换句话说就是，无论当前这个子问题的最优值是采用什么方法怎么得到的，都不影响后续问题（当前子问题的父问题）最优值的求解。</p>
<p>对于本题，给定$n$个数$[a_1,a_2, \dots, a_{n-1}, a_n]$目标是求顺序经过这$n$个数后的最大收益。子问题可以定义成：求顺序经过$[a_1, a_2, \dots, a_{n-1}]$这$n-1$个数的最大收益，然后再决定在第$n$个数的时候采取哪种操作，是<strong>买</strong>、<strong>卖</strong>还是<strong>不买也不卖</strong>来判断原问题的最优值。</p>
<p>首先，这里我们定义子问题【求顺序经过$[a_1,a_2, \dots, a_{i}]$这$i$个数的最大收益】的解也就是状态，为<strong>dp[i]</strong>。</p>
<p>然后，在第$i+1$个数的时候，判断采取哪种操作，得到子问题【求顺序经过$[a_1,a_2, \dots, a_{i+1}]$这$i+1$个数的最大收益】的最优值<strong>dp[i+1]</strong>。<br>这样似乎很好，可是在知道了<strong>dp[i]</strong>之后，却不知道经过$i$个数后手里有没有宝石，那么在判断第$i+1$个数采取哪种操作的时候就没有判断依据，因为都不知道到了手里还有没有宝石。<br>那么我们可以引入一个参数<strong>own</strong>(取值True或False)指示手里有没有宝石，如果宝石被卖掉则own置为False，如果买进则置为True，否则不改变own的值。</p>
<p>以上过程似乎很合理，可是当我们在决策第$i+1$个数的时候，我们只能知道own是True或者False其中一种情况。换句话说，如果此时own为False，那我们就知道第$i$个数决策后手里没有宝石，此时我们会在第$i+1$个数上决策到底买还是不买。可是我们不知道如果own为True，也就是第$i$个数决策后手里有宝石的情况。你可能会说，既然own为False了，那么肯定own为False是第$i$个数的最佳决策结果，很正确。可是存在一种情况就是，我在第$i$个数的时候拥有宝石，也就是own为True（买进或者不卖）虽然比不拥有宝石的收益小，但有可能我在后面卖掉获得的收益会超过当前own为False的收益。</p>
<p>所以我们要对比有或没有宝石两种情况，在任何一个中间数$i$上，我们要求出有宝石的最大收益和没有宝石的最大收益。两者虽然不等，但后面有可能有宝石的超越没宝石的，或者相反。最终的结果要到最后一个数的时候才知道。因此我们要同时记录有宝石和没宝石两种情况。因此我们将<strong>d[i]</strong>扩展为<strong>d[0][i]</strong>和<strong>d[1][i]</strong>，前者表示在第$i$个数决策完之后手上没有宝石的收益，后者表示在第$i$个数决策完之后手上有宝石的收益。</p>
<p>对于<strong>d[0][i]</strong>，在第$i$个数决策完之后手上没有宝石，有两种情况。一种是在第$i-1$决策完之后手上本来就没有宝石，那么为了保持在第$i$个时刻没宝石，就不能买进，所以<strong>d[0][i]</strong>的收益就是<strong>d[0][i-1]</strong>；另一种是在第$i-1$决策完之后手上有宝石，那么为了保持在第$i$个时刻没宝石，就必须在第$i$个时刻卖掉，所以<strong>d[0][i]</strong>的收益就是<strong>d[1][i-1]</strong> + a[i]。这里的a[i]是宝石在第$i$个数上的价格。为了使得<strong>d[0][i]</strong>最大，所以求一下两者之间的最大值：<br>$$<br>d[0][i] = max(d[0][i-1], d[1][i-1] + a[i])<br>$$</p>
<p>对于<strong>d[1][i]</strong>，在第$i$个数决策完之后手上有宝石，也有两种情况。一种是$i-1$时刻没有宝石，另一种是有宝石。分析同上，试着分析一下。最后可以得到：<br>$$<br>d[1][i] = max(d[1][i-1], d[0][i-1] - a[i])<br>$$<br>第二个公式为什么是减去a[i]？仔细想一下。</p>
<p>到此为止，我们即可得到动态规划要求的每一个时刻的状态d[0][i]和d[1][i]，以及状态转移方程：<br>$$<br>d[0][i] = max(d[0][i-1], d[1][i-1] + a[i])\\<br>d[1][i] = max(d[1][i-1], d[0][i-1] - a[i])<br>$$</p>
<p>根据状态转移方程即可得到动态规划核心代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">	d[<span class="number">0</span>][i] = max(d[<span class="number">0</span>][i<span class="number">-1</span>], d[<span class="number">1</span>][i<span class="number">-1</span>] + a[i])</span><br><span class="line">	d[<span class="number">1</span>][i] = max(d[<span class="number">1</span>][i<span class="number">-1</span>], d[<span class="number">0</span>][i<span class="number">-1</span>] - a[i])</span><br><span class="line"><span class="comment"># 最后返回有宝石和没宝石两种情况的最大值</span></span><br><span class="line"><span class="keyword">return</span> max(d[<span class="number">0</span>][n], d[<span class="number">1</span>][n])</span><br></pre></td></tr></table></figure>
<p>待续…</p>
<h4 id="贪心策略"><a href="#贪心策略" class="headerlink" title="贪心策略"></a>贪心策略</h4><p>待续…</p>
]]></content>
      <tags>
        <tag>算法</tag>
        <tag>牛客网</tag>
      </tags>
  </entry>
  <entry>
    <title>参加CIKM会议</title>
    <url>/20191107_CIKM/index.html</url>
    <content><![CDATA[<p>第一次参加国际会议，初来乍到</p>
<p>太难了，紧张得不要不要的</p>
<p>报告前8小时，手机摔坏了</p>
<a id="more"></a>


<p><img src="https://img.chsong.live/CIKM-2019/IMG20191104082446.jpg?x-oss-process=style/m" alt="lG3sr8.jpg"></p>
<h3 id="Presentation"><a href="#Presentation" class="headerlink" title="Presentation"></a>Presentation</h3><p>主持人能不能别催，挺醒我: “one minute，one minute”</p>
<p>我: “OK” （此时实验才讲一半）</p>
<p>我: “since the limitation of the time, we skip the case study” （有点紧张随口说的，不知道有没有语法错误）</p>
<p>预先准备时正常读完备注需要8分钟，要在7分钟讲完，还得时不时看看大屏幕和观众以免僵硬，好难呀</p>
<p>还是ppt的内容放多了，之前没舍得删掉</p>
<p>那个提问的小姐姐，声音小了点啊，主持人真是的，也不给个话筒</p>
<p>我瞎扯一通不知道合不合你的问题</p>
<p><img src="https://img.chsong.live/CIKM-2019/lGBuIP.jpg?x-oss-process=style/m" alt="lGBuIP.jpg"></p>
<h3 id="Poster-Session"><a href="#Poster-Session" class="headerlink" title="Poster Session"></a>Poster Session</h3><p>开始我和左右两边的两个外国大兄弟，还没有人来找我们交流，我们就聊了聊，互相介绍工作</p>
<p>一个爱尔兰的，一个加拿大的</p>
<p>让我说还行，听是真的有点头疼，能知道你做的啥东西，专业词组听不懂，实在不知道细节</p>
<p>emmmm，可是还得保持微笑，还附和着：“Yeah, Yeah, Good”</p>
<p>叫Felix的大兄弟，走的时候给我来一句中文：“很高兴认识你”</p>
<p>我：”what? what?”</p>
<p>你可以直接说nice to meet you, 这我还是能听懂的</p>
<p><img src="https://img.chsong.live/CIKM-2019/lGB956.jpg?x-oss-process=style/m" alt="lGB956.jpg"></p>
<h3 id="Banquet"><a href="#Banquet" class="headerlink" title="Banquet"></a>Banquet</h3><p>小吃有糖葫芦，糖人，吹糖人</p>
<p>糖葫芦味道挺棒虽然有点酸</p>
<p>师兄们不要笑，糖葫芦挺好吃的，咋不来尝尝呢</p>
<p>还有武术，舞狮，戏剧，大鱼海棠，满满的中国风</p>
<p>从提出idea到今天，整个过程难呀，感谢师兄师姐，还有导师们的帮助</p>
]]></content>
      <tags>
        <tag>动态</tag>
      </tags>
  </entry>
  <entry>
    <title>保研夏令营经验总结</title>
    <url>/20190428_SummerCamp/index.html</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>从关注夏令营到夏令营结束，花了好长的时间，这学期的课也没有选多少就是为了准备夏令营，参加了四个夏令营，“”旅游“将近二十天，天天在外面跑晒黑了不少（今年气温贼高，大多40度以上）。7月4号到7月6号参加北京大学前沿交叉学科研究院（以下称“叉院”）的夏令营，7月7号都7月9号参加清华大学计算机学院的夏令营，7月13号到7月16号参加南京大学计算机学院夏令营，最后一个7月17号到7月23号参加中国科学技术大学计算机学院夏令营。最终中科大offer确定！</p>
<a id="more"></a>

<p>我的个人基本情况：</p>
<blockquote>
<p>专业：软件工程<br>学分绩排名：8/235<br>英语四六级：526，490<br>数模美赛一等，数学竞赛全国二等和省一等，节能减排全国三等，还有一些校级一二三等奖</p>
</blockquote>
<h3 id="关注夏令营"><a href="#关注夏令营" class="headerlink" title="关注夏令营"></a>关注夏令营</h3><p>对于关注夏令营的问题，我觉得宜早不宜迟，越早心里越有准备。之前听说过不知道哪个学校的一个学姐到九月份了都还不知道有保研夏令营这么一回事^~^，最后还是走的九月正式推免这条路，还是早点了解为好，建议在大三下学期开始就着手。<br>这里有一些有用的网站以及app：</p>
<ul>
<li>保研论坛：<a href="http://www.eeban.com/" target="_blank" rel="noopener">www.eeban.com</a></li>
<li>导师信息网：<a href="https://www.mysupervisor.org/" target="_blank" rel="noopener">www.mysupervisor.org</a></li>
<li>保研通APP：<a href="http://www.973.com/xiazai/60337" target="_blank" rel="noopener">www.973.com/xiazai/60337</a></li>
<li>保研论坛APP：<a href="https://www.7down.com/soft/175489.html" target="_blank" rel="noopener">www.7down.com/soft/175489.h…</a></li>
</ul>
<h3 id="准备材料-amp-联系导师"><a href="#准备材料-amp-联系导师" class="headerlink" title="准备材料&amp;联系导师"></a>准备材料&amp;联系导师</h3><p>最重要的是准备成绩单和排名证明（前五学期），当时排名刚出来我就拉上隔壁班一个喜欢扯淡的邱同学一起去教务处打印成绩单和排名证明，我们学院教务处还好，不怼人，也不会以各种理由要留住你而不给你打印，我们貌似是最早的，还是那句话宜早不宜迟。打印出来之后最好拿复印店去彩印几份。<br>最麻烦也是最尴尬的一件事就是去找各个老师给你在推荐信上签字，推荐信自己电子版写好打印出来，然后找老师签字，因为我们学院的教授副教授就那么几个还是算上院长副院长，而要报的学校又那么多，么个学校大概在两到三封，多次找同一个老师会非常尴尬，邱某就是找了老师签了好几次，最后写错了一个地方又去找老师签字，老师当场怼他：”你到底要报多少个呀“。我也是，我去找院长签字的时候说“我记得给你签过，你报了多少啊，别到时报了又不去坏了西工大名声”，真是非常尴尬。建议最好是将所有的推荐信都准备好，需要某一个老师签的所有信一次拿过去给他让他签了，然后再去找其他老师。<br>  除了上述材料麻烦之外，剩余的就简单了，就剩个人简历，个人陈述，获奖证书复印件等，差不多就这些了，之后就开始联系导师了，我大概是在4，5月份开始联系老师，联系的方式是电子邮件，主页中写上自己的一些情况，例如教育背景，竞赛和项目经历，感兴趣方向以及未来规划等，最后在附件中附上简历，成绩单和排名证明足矣！我联系了很多，现在回去看看邮箱，来往信件共100多封。发邮件要广发你的目标学校和感兴趣方向的老师，但是一个实验室和课题的老师最多只发一个，否则有可能这个实验室或课题组的老师都不会要你。但是如果老师3到5天还没回一般是对你不感兴趣，你可以再次发邮件询问，或者换老师。</p>
<h3 id="报名-amp-等待入营通知"><a href="#报名-amp-等待入营通知" class="headerlink" title="报名&amp;等待入营通知"></a>报名&amp;等待入营通知</h3><p>我当时报名时的原则是”广撒网“，当然是要比本校更好的学校，不然保出去干啥。我报了好几个学校，有的入营了，有的被刷了，有的争取到机会入营：</p>
<ul>
<li>复旦大学&amp;中国人民大学：报名报了一半放弃了，因为了解到这两所学校在工科方面不是那么出众</li>
<li>北京航空航天大学：（吐槽）北航没有网上报名系统，只是通知邮寄材料，我用EMS邮寄过去，最后收寄结果显示的是一个不知道的地方收的，我打电话给快递员他说这个地方就是向北航送快递的，我以为是的，最后入营结果出来，我和邱同学都没有录取，而是好几个（并不是说他们不好）排名在我们后面并且竞赛也比一定比我们多的同学入营了，邱同学打电话过去问，那边说是核查之后没有收我们材料的记录，也就是我们的材料没有寄过去，那边还说”焉知非福，九月在来吧”。（fuck我不知道是EMS不靠谱还是北航把这不当回事）瞬间对北航没有什么意愿了，不去拉倒。</li>
<li>清华大学：准备好材料之后就寄过去了，网上也能看到状态，比北航好多了，最后入营结果快6月底才出，有点慢，但是最后看到名单里有我，还是非常高兴的，毕竟我们专业只有两个人进了。100多人入营，比例大概15%左右。</li>
<li>北大叉院：在等到入营结果出来之后，我没有收到邮件，也就是被刷了，但是我又打电话去问那边说已经确定了，如果有补录会考虑我，最后真的有人学校考试冲突去不了有补录，然后我就去了。机会都是争取来的，给学校那边打电话多问问。这是在刷了之后还有的最后一线希望。</li>
<li>上海交通大学：感觉上交有点傲娇，入营感觉很有难度，我们专业只有第一名入营了（他最后没去），而且听说给外校的学术型硕士名额极少，基本只要直博生，我们专业好像好几个确定去直博。</li>
<li>南京大学：网上报名之后，一段时间之后发邮件通知说通过筛选了，需要网上确认入营然后邮寄材料。</li>
<li>北大信科：结果出来的最晚的一个，最后被刷了，听人说是那边看到清华名的单了入营清华的都不要（不全是，除非你特别厉害）我们专业只有第五名的同学入营。</li>
<li>中国科学技术大学：不需要邮寄材料，全部扫描成电子版在网上提交，最后我们专业就我入营，好像是1200多人中筛选了120左右的人，大概10%的入营比例。</li>
</ul>
<h3 id="夏令营汇总"><a href="#夏令营汇总" class="headerlink" title="夏令营汇总"></a>夏令营汇总</h3><p>夏令营从7月3号正式开始了。</p>
<h4 id="北大叉院夏令营"><a href="#北大叉院夏令营" class="headerlink" title="北大叉院夏令营"></a>北大叉院夏令营</h4><p>北大叉院夏令营开始最早，7月3号晚上坐火车去北京（第一次去北京），第二天大概早上8点多就到了，在火车上的时候还和之前联系的一个叉院老师邮件沟通了一下，他让我加他微信方便联系，感觉是个好的开始。从火车站坐公交到北大之后先去报道，教务处说下午两点再来。目前时间大概在10点左右，那个老师又打电话来了，问我到了没有，现在有没有时间去和他见个面，我来的比较匆忙，现在肯定不是最好的时候，我就说我刚到火车站，要不下午去见面，然后就定在了下午一点。我赶紧先到学校外面找了个饭馆吃了个饭（不知道算早饭还是午饭），然后在北大的校园里一个角落里坐了一会儿，那天真是热呀，真受不了，还好我电脑包里面有一个把扇子。大概12点40左右就去老师门口等着，他还没来，期间他的一个学生看我在等老师，他就打电话给老师说我到了，一会儿老师就来了，我们在他办公室坐下，我们面对面坐着，简单的客套了一下就转入正题了，他说问我几个问题，他问我当x很小的时候sinx大于什么东西，我印象中是在x趋于0时sinx &gt; x,我就回答了x，然后他看我回答挺快的就问为什么，说实话这个问题换做谁闭着眼睛都能答出来，我当时可能紧张了竟然忘了，扯到了x趋于0是x/sinx的极限是1，他问然后了，我知道不对，但是真的突然忘了，我就赶紧换其他方法，我说用几何方法吧，单位圆来证明，确实解决了。老师说嗯问题确实解决了，但这不是我想要的答案，我本来是想要你用微分的角度来解决的，不过你能想其他办法解决这个问题还可以吧。（结束之后想到直接是x-sinx然后求导证明单调就完事了，当时真的突然记不起来）然后下一个问题问我一个统计的问题，说如何从统计的角度求解pi的值，这个问题太简单了，高中生都会，我很快就答出来了，然后让说你之前是不是接触过这个问题，回答这么快。（不应该回答这么快，让老师觉得你接触过这个问题，现在你即使答上来也看不出你的水平，应该装着思考一下）。然后说我在问你一个问题吧，还是统计方面的，说如何知道100个人的平均分数，而且又不想把每个人的分数看一遍，我想了一会儿说随机抽样吧，他嗯了一下表情和奇怪，我不知道对还是错，他也没说对错（后来问别人，都说是抽样，我现在都不知道对还是错，他表情真的很奇怪），然后他就这个问题延伸又问我一个问你，我没听明白，他又说了半天我还是没听明白，尴尬了，我问题都没听懂咋回答。就一直在那跟他扯，他估计认为我不会就说了答案然后还给我解释，到现在我还是不明白他要问什么！！！然后他说我在问你一个问题吧，说这是他当时读博士的时候他导师面试他的问题，现在问问我，说给你一个半正定对称矩阵<strong>A</strong>，求矩阵<strong>A</strong>的n次方，或者换句话说在n很大的时候会发生什么，说实话这个问题我当时真不会，想了好久，他说给我提示就是把矩阵<strong>A</strong>分解，然后再求解，我说三角分解，表情一愣（感觉不对）说然后呢，我说不下去，我也不知道了，感觉越分解越乱啊，我们就只学了三角分解，然后我有想了半天，他知道我不会就说是矩阵的奇异值分解，我一愣说我不知道这个呀，我们就没学过这个分解，答案是很简单，但是我根本就不知道这个分解呀，可能是线性代数没学好吧。。。然后又客套了一下就结束了。哎，不会就是不会，他才不管你学没学过，平时还是应该多积累，多深入，不能只停留在老师讲的那些东西上。然后下去报道，领衣服，回宾馆休息。晚上去参加开营仪式，在一个大的报告厅，里面非常的豪华（无法形容），开营仪式上各个方向都有代表老师上来做介绍，大概半个小时到一个小时的时间就结束了，第二天就是听各个老师的报告会，各个老师上去把自己的方向吹一吹来吸引学生，下午大概3点左右有笔试，我们方向是笔试和机试可以选机试和笔试或者只选机试，机试必选，统计学方向是笔试必选，机试自愿。笔试这段时间我回去准备晚上的机试了，晚上的机试一共10道题，只要平时认真写过代码的做3道题以上没问题。我当时做了5题，然后第六和第七题一个是最短路路径问题一个是深度搜索，这两个我都能做出来，我先做的最短路问题，代码写完了但是这题提交就是通过不了，英文题目读了好几遍觉得没问题但就是过不了，结果这最后的一小时都耗在这题上，最后这两题都没做出来，后来发现是一个英文单词理解错了导致题意弄错了，其实只要代码稍微修改一下就可以了，但是题目意思弄错了真的没办法，英语水平还得好好提高。看到实时排名我做了5道题排25名，共七八十人吧，还能接受吧，我认识的我们学校的和我在内一共三个人，我做的最多，一个4题还有一个3题。机试完感觉一般吧，回去好好睡觉第三天准备面试。晚上的时候面试安排出来了，我在下一点左右，其实我们那组面试很快，老师们下午就在原地吃饭，吃完第二个就到我了，我进去之后老师先让我自我介绍，我忘记有没有要求英文，但我自我介绍是说的英文（准备好的），完了老师就开始看着材料问问题，简单说了一下竞赛，项目，我有一个软件测试竞赛省特等奖，问我为甚能得特等奖，能不能拿来创业，我就说我做的还不错，把学的知识运用的比较好而已，创业还达不到这个水平，然后就没有然后了。共四个老师，中间靠左的那个问我一个复变函数的问题，后来又有一个老师问我信号与系统的问题（因为看我成绩单上有这门课），之前我都是准备的机器学习方面的东西，比如线性代数，概率统计，数学分析，机器学习，谁会去复习信号与系统啊，我们专业选机器学习方向有谁回去看那本600多页的大厚书，的有我一直在凭着印象来说，结果肯定是不理想，然后就结束了，感觉整个过程都很不爽，没有一个问题和我准备的沾边的，后来了解了一下别人的情况，不都是这种问题，看来还得有一定的运气，充分的准备和一定的好运气才有好结果。然后就是回去等结果，收到邮件就录取了，没收到就是被刷了，很遗憾我被刷了。我们学院的第一名和我两个人都没有录取。</p>
<h4 id="清华计算机夏令营"><a href="#清华计算机夏令营" class="headerlink" title="清华计算机夏令营"></a>清华计算机夏令营</h4><p>7月7号到清华大学去报道之后再宿舍休息了一会儿，晚上就直接是机试，这次机试一共三道题，三道题基本上都是模拟类型的题目，第一题是给你一个矩阵然后输入不同指令对矩阵进行反转等各种操作，第二题是让你输入一段代码然后将代码中注释去掉然后再输出，第三题记不太清了。我做完了第一道和第三道，第二道不太会（字符串处理是硬伤）。这两道题通过自定义测试应该是没问题的，但是去清华的好多都是ACM大牛，做不出三道基本没戏，清华的一个政策是夏令营是没有面试的，不录取任何人的，机试前50名九月份直接获得面试资格，没进前50的如果能够找到老师九月推荐你面试你也可以直接获得资格，每个老师最多推荐三个，也就是说只有上面两种方法你能9月份去面试，否则你再次报名会和九月报名的人一起筛选，不一定会轮得到你，所以夏令营做好机试或者找好老师推荐很重要。我开始还以为机试做的不错，可是牛的人很多，不全做出来基本没戏，然后我就去找之前联系的老师，问问他能不能推荐我九月份来面试，还好老师答应了。但是自己感觉没有前50名那么稳，毕竟人家的机试成绩在那里。只能说九月试试运气，不能抱太大希望。<br>第二天就是听各个老师的报告会，个人都来吹一下自己的方向多么多么好多么多么有前途。一整天都是，有点无聊。<br>第三天就是最后的师生交流，每个老师都在外面摆一个牌子，感兴趣的直接去找老师交流，了解情况，其实这个时间就是用来给你联系老师的，看有没有老师愿意推荐你，如果找到了老师愿意推荐，那么你九月份就还有一线希望，但不要过于乐观。了解完了之后在12点左右有一个冷餐会，吃点东西就可以走人了。</p>
<h4 id="南京大学计算机夏令营"><a href="#南京大学计算机夏令营" class="headerlink" title="南京大学计算机夏令营"></a>南京大学计算机夏令营</h4><p>清华夏令营结束后回学校休息了两三天，这几天正是高温，也没怎么休息好，7月13号晚上就坐上火车去南京，然后又做了好久的地铁才到，南京大学真是有点偏远。报完到之后就去宿舍休息了，这宾馆十分高档，应该是我住过最高档的。休息了一会儿一个我们学校的本专业同学发来消息问我在哪，问我现在去不去找老师，我想了一会儿就答应了，和他一块去找老师，准备提前联系一下，去了之后他说准备去找lamda（了解的人知道lamda有多牛）的老师，我想都没想过，我觉得有点难吧，我先去和我之前联系的老师见了一下（他不在，和他的博士聊了一会儿），然后有和那个同学去lamda实验室试试，lamda在5月份就有过一次面试，我当时没去，没想到现在听说还有几个名额，就在这下午就准备给大家面试一下，还好我来了，不然又错过机会了，但是来了也有将近10个左右，但是名额不超过4，5个，我们排好队面试。轮到我了，我进去没有自我介绍直接开问，问了几个数学问题，我之前准备的可以，回答这些没任何问题，老师们看起来很满意，然后我又把他们往我喜欢的机器学习等方向上引，让他们问这些方面的问题，因为我也准备的还可以，果然他们问了，结果可想而知，比较满意，一个老师当场就说你那个报名表带来没有，我现在给你签字吧（南大必须要有接受你的老师给你签字，然后再去通过学院的面试就可以了），尴尬，我没带进来，在门口排队时放在袋子里了，想着没必要带进去，没想到老师当场要给我签字，我说我出去拿，他说不要拿不要拿，那就明天早上你在拿来吧，我说好。其实他是不想让外面还在排队的人知道我被接收了，我其实也明白，因为老师们跟之前的同学的回复是你回去等消息吧，我们筛选之后再通知你们，所以我就答应明天早上再拿来签字。出来之后很高兴，没想到lamda这么轻松的就拿到名额了。感觉已经没有问题了（没想到学院面试会很坑），吃完饭高兴的回去了。<br>第二天就是开营仪式，然后就是各个实验室的摆出牌子来宣传，还可以去实验室参观，演示一些研究成果来吸引大家。因为lamda已经接收了，继续了解了一下之后就走了，毕竟已经签字了。<br>第三天就是学院的面试，我是第二个面试，南大不得不说做的很不好，我进去了，共三个老师，之后老师问有没有简历，我开始就没打算给简历的，因为南大在面试之前就说了啥都不用带，直接进去就行了，不让带简历的，我进去之后却张口找我要简历，这不是逗我玩了吗，我在想这老师昨晚喝多了吧！他们说要简历我不得不给要，可是在书包里面，还好我把书包带进去了，但是翻简历过程很尴尬呀，真不知道该咋吐槽。没有要求我做自我介绍又是直接开始问问题，我想也好，但是这个提问老师好像就是软件工程和软件测试的，他上来就直接问我什么是软件工程，只有被问过这个问题的人才了解我此时的心情，之前有个去北航面试的同学也被问过类似的，结果坑死了。我凭着印象简单说了一下，答案不是那么理想，然后第二个问题更加让你欲哭无泪，他问研究软件和研究软件工程有没有什么区别。。。我想郑老师（我一个老师）快来帮我解答一下吧。。。此时的心情没人能理解，我想了一会儿回答说有一定区别，刚说完“有区别”三个字立刻就被他打断了说其实没有多大区别，他扯了一堆理由解释，我在想你这明显就是故意的嘛，这个问题本身就是见仁见智的问题，说出自己的理解就可以了嘛，他却那么快打断我却发表自己的看法。一个旁边的老师看我比较尴尬就打圆场说这应该不是他想选的方向，那个老师也不知道咋说的记不清了，然后又接着说用英文解释一下什么事软件测试，必须英文，没办法憋了一两句解释了一下就不会说了。然后就结束了，感觉不太好。这个过程没问一个数学类或者研究类问题，我想对一个想做研究的人你净问这些虚的模能两可的问题。面试分为很多组，听说其他组都问的很正常很稳，我们这个组被很多人吐槽。说到底还是自己平时对一些常见的基本问题不够重视，计划赶不上变化，平时多积累多了解一点还是没错的。</p>
<h4 id="中科大计算机夏令营"><a href="#中科大计算机夏令营" class="headerlink" title="中科大计算机夏令营"></a>中科大计算机夏令营</h4><p>中科大夏令营是17号开始报道，因为之前联系的老师说提前见个面并且来个机试，所以16号南京大学的夏令营一结束下午立刻就坐上高铁去了中科大，大概5点多到的，有点晚，我去的时候老师已经走了，他的学生说让我晚上8点左右过来，我就先回宾馆了吃完饭休息了一会儿，大概7点40左右我就出发去学校找他，先是给我做一个机试，一共四道题，全是英文的，而且题目十分长废话很多，需要你快速读懂英文题目，总共就小时，不可能做完4题，所以我的计划是抓点紧做完两道就OK了，后来才知道其实做多少不重要，只要能做出一道就可以，因为中科大这四道题没有像其他学校那样给你几道送分题，从第一题开始就涉及到一点点算法。结束之后一个研究生把我叫去了另一个办公室，包括他里面共有三人，有一个是博士（后来了解到这个博士非常优秀），然后他们开始和我聊天（后来才知道其实就是面试，如果过了才会推荐给老师最终面谈一下），聊的范围比较广，从兴趣去爱好到个人的特点再问一些专业知识，还问一些感兴趣的研究方向上的问题，无非就是看看数学的基本功和对该研究方向的了解程度，之前就说过了，这方面我准备的比较充分，没有什么问题，整个过程很轻松。结束之后一看时间有点晚了，我一个人来这里不太熟让我赶紧回宾馆，还说让我找个时间去和老师见一下，也就是让老师最终在看看可不可以，这次聊天大概40到50分钟。结果就是比较满意。然后第二天就是正式报道举行开营仪式，中科大是所有专业同时举办夏令营的，所以好多人，开营仪式非常正式，整个夏令营的活动都非常多，我觉的中科大的夏令营才是真正意义上的夏令营，有学术交流，有休闲娱乐。下午就是师生见面会，副院长也就是我后来的导师做了开场报告，整体介绍了一下各个实验室，然后就是老师和同学们之间做游戏，副院长报告完就又走了不能和我们一起‘玩’，走之前有一个非常有意思的场景，我和我们学校计算机学院的一个女生遇到了，她也是想报这个老师的实验室，跟我说咱们赶紧去和他聊聊，他又要出去开会了，我就和他一起去了，我先和老师说了我是西工大的之前联系他的某某某，他知道我了，然后说好的，那个女生也说我是西工大的某某某，我也是报您的实验室的也说了一番，老师笑了一下，心想这么多西工大的，说我们实验室后面有机试好好准备啥的。我已经做过了，她还没有做。这是一个男生看我们说了这么多，他也出来说我也是西工大的某某某（也是计算机院的），现场师生都笑了，西工大的咋都找这个老师，别急还有，这时又来一个男生跟这个老师说我也是西工大的某某某，同样说了一翻，这场面真少见，真的有意思，看来西工大的想霸占这个实验室啊。。。这次我们学校来了4个，计算机学院1个女生两个男生，软件学院就我一个。老师走后所有学生和其他老师做游戏（有点意思）。在晚上有个别实验室有面试，我去了一个（这个是和我最后想去的实验室应该是是最好的两个实验室了）参加面试，没想到人好多，每个人都发两页英文的纸，上面是他们写过的论文的前两页，基本都不一样，需要你在这短时间内看懂，然后面试轮到你了就去，我看了一会儿，我就感觉我对这个方向不感兴趣，我大看了一下是讲什么的然后就没看了，到我面试了，我进去之后两个老师（人比较亲和）看了我的简历然后问了我一些问题，然后问我这两页纸看的咋样，我大概说了一下，他们就说可以了可以了，说这么短时间能看到这个程度很不错了，整个过程很愉快。然后我就会宿舍了。到宿舍休息了一会儿我就洗澡去了，出来一看手机有一个未接来电，我回了过去，他说是刚才面试的老师，说我面试通过了，如果愿意来这个实验室的话明天来签个双方确认书，我答应了。挂了电话后我很高兴，但是有些纠结。第二天，上午参观先研院和实验室，结束后我就抽空去昨天打电话的老师那里签字，他给我一张纸，我填了一般之后犹豫了，我又问了一下这个实验室的研究方向，我不太感兴趣，场面十分尴尬，老师又给我解释他们是干什么的，但是我依然不感兴趣，手里拿着那张表真不知道咋办，老师看出来了就说你还报了其他实验室吗，我如实说了，我之前联系了做大数据的实验室，我说我想做人工智能方面的，他说那个实验室是做人工智能出身的，但我们实验室实力也挺强的。（这些我都知道，这两个实验室是科大计算机实力最好的两个）我又说我想能不能我明天去那个实验室面试之后再做决定（此时我心里确实不太喜欢这个方向），当然老师也不想做备胎，就说嗯也可以，但是你现在不确认明天我们不能保证有名额给你，因为我们也有备选人，我们现在就提前决定给你名额是因为觉得你比较那啥（你们懂的），我手里拿着确认书，上面写着签了就必须来，所以我当时面临两个选择，一是直接签了确认，我的夏令营就结束了，后面学院面试不出什么大问题就OK了，第二个选择是放弃这个实验室，赌一把，赌我明天和之前联系的老师（副院长）见面比较成功然后去我感兴趣的方向，但风险就是，明天我见面不顺利，那么这两个最好的实验室都没戏，只能去找其他实验室了。我犹豫了好久，而且是在如此尴尬的情况下，当时我和老师都是站着的，最后我思考了很久，做出了决定，我决定赌一把，因为我读研肯定是要选我感兴趣的方向，不然我未来的硕士阶段将过的很不舒服，还不如直接出去工作，最坏的打算大不了夏令营失败了，九月份再战其他学校，我也说不准我的决定是对是错，我想不管对错，适合我的才是最好的，以后的路还长，所以我大胆的决定直接拒绝，我就跟老师说，那算了吧，我在考虑考虑吧，老师也看出来我的想法就说好吧，明天你要想来我们也欢迎但是不能保证给你留名额（我当然知道是套话，肯定没名额，还有那么多候选的），出来之后感觉轻松了许多，刚出门没多久就看到刚刚出去的那个同学又被叫回去了，我拦住问了一下，他是刚才老师让他回去等通知的同学，我一出来老师就给他打电话说实验室筛选好了让他过去签字，我心里很清楚，我一出来名额就让出去了，我的名额给他了。。。我都料到了，也做好了最坏的打算了，而且此时我并不为刚才的决定后悔。这天结束后，我们都回宿舍休息，第三天也就是19号户外活动，参观科大讯飞等地方，晚上我就去找老师见面了，因为他最近去外面开会了比较忙，还是晚上9点多一回办公室我就找的他，我把简历给他，他看了一下然后问了我一些问题，没问太多，了解了一些我的情况，因为我之前就聊过好多了专业问题，如果不行的话他的学生也不会把我推荐给他，最后就结束了，感觉还不错。晚上回去我就问之前微信加的一个学长（这个老师的博士）今晚的结果什么时候出来，他说明天就出来了。过了一会儿就睡了，第二天早上刚下车（科大都是用专车在宾馆和学校之间接送，科大这点做的比较好）之前面试我的博士生打电话给我说我面试通过了。挂完电话我顿时感觉心里的石头落地了，看来昨天博了一把那个选择是对的，然后这一整天就过的很轻松了，都忘记这一天干都是啥活动了，最后一天21号了，学校正式面试开始，时间是一上午，我排在中间，我等前面的等了好久，到我了我进去之后看到有三个老师，两个男老师一个女老师，一个老师让我说一下自己的特点，我巴拉巴拉说了一堆之后老师们对我很认可，两个男老师说嗯不错，很雷厉风行啊，这个特点要保持。然后就问了我一个简单的问题说无向图的深度搜索结果是否唯一，然后就结束，那个女老师就没吭过声，男老师问她还有没有想说的，她说可以了没有了。然后就结束了，感觉好快，瞬间就结束了，一个特点的介绍吸引住了老师后就特别顺利了。下午回去后面试中的两个男老师竟然都打电话过来问我，第一个老师说你联系好老师没有，我今天面试对你印象很好，有没有兴趣来我们这实验室，我当然会拒绝，因为我喜欢的那个实验室已经联系好了，我就委婉的回答，我就说我联系好老师了，他说让我等今天通知出来再决定要不要我（其实已经要我了，我是顺便试探一下我今天的面试过了没有），老师立刻说你已经通过了，你如果没联系好老师可以来我们这里，我说好的谢谢老师，我会考虑的，然后老师说你想来可以打我这个电话，谢谢老师之后就挂了。过了一会儿面试我的第二个老师也打电话来了（这个老师是做系统方向的，也是科大很牛的教授，跟他的一个本科毕业于科大的博士聊天时知道的）说今天非常看好我，问我有没有找好老师，想不想去他那里，我说我找好了，谢谢了老师之后就愉快的挂了电话。心情十分的高兴，没想到这么多老师希望我去他们那里（好多同学都没联系到），并且再次为那一次决定感到高兴，去了自己最想去的实验室。下午两三点实验室老师发来短信说要和我们筛选出来的学生一起见面，我去了后发现包括我在内共五同学，也就是说这次夏令营这个实验室只招了5个人，这次报这个实验室的大概有三四十人，最起码那天我们西工大的四个都找了这个老师的（再次感到那天很有趣），所以说我们还是很幸运的。老师和我们交流了一下，然后散了，吃完饭去参加闭营仪式，办的也十分好，10几个节目的表演，像晚会一样。次日早上也就是22号坐上火车返回西安。这次科大夏令营心情充满波折，过程非常愉快，最后的结果很满意。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li>平时在学完课上东西之后还是需要再拓展一下，尤其是在自己感兴趣的方向上深入，否则别人会觉得你自己喜欢的东西都不了解那你还了解啥。</li>
<li>要注意多积累，主要是一些本专业本领域的一些常识性问题要重视，不管是不是你喜欢的专业，既然选了就要好好对待。</li>
<li>然后英语要不要丢掉，学了这么多年不能白学了，尤其是以后做研究搞学术还是需要的，面试的时候虽然不一定会问，但是如果问了就懵了，英语还是要坚持学。</li>
<li>还有就是在面临选择是要坚持自己的意愿，不能被眼前的利益所诱惑，该放弃的要果断放弃，适合自己兴趣的才是最好的。</li>
</ul>
]]></content>
      <tags>
        <tag>动态</tag>
      </tags>
  </entry>
  <entry>
    <title>大学生活回顾</title>
    <url>/20171226_NWPUReview/index.html</url>
    <content><![CDATA[<p>从来都不喜欢写作文之类的东西，主要是因为文笔不好，因此对于这方面没有兴趣，经常希望能有机会对自己过去的一段时间所做的和所经历的事情做一些回顾和总结。转眼就2018年了，前两天大家还都在考研，虽然我不考，但是我也有些小兴奋。。。最近一个月左右也过的很无聊，除了准备一下毕设的一些事情之外似乎也无所事事，今天下午同样是无聊，因此借此机会对过去的大学四年简单的总结一下。</p>
<a id="more"></a>

<h3 id="学习方面"><a href="#学习方面" class="headerlink" title="学习方面"></a>学习方面</h3><p> 在学习方面一句话就可以概括“这四年没有白混”。刚上大一的时候跟很多人一样，都对大学充满了好奇，东看看西瞅瞅唯一有些不爽的就是我有些路痴不识路，没有百度地图哪也去不了，近些天认识的一个朋友貌似对此也有些无语。因此当时我唯一希望记住的就是教室在哪儿，上课不能迟到；图书馆在哪，可以找个地方自习；过了好久才发现，原来我们学校也不大。我大一的时候基本上就是在教室图书馆宿舍食堂这几个地方待着，似乎看来除了学习很少干些其他事情，噢我是不玩游戏的很多人不信，最近闲下来才玩玩手游。由于是刚来的，多多少少还带有一些高中的特点，上课认真做笔记，老师一写一黑板我就一写好几页，现在还清晰的记得一件事，当时正在上郭老师的数学课，一个好像是督导的年纪有些大的人坐我旁边热情的跟我说不要以为来大学了就上了保险，还是要好好学习，我就一个劲的点头说嗯是的我知道，那堂课很愉快。在期中的时候，我们院自发的搞了一个期中考试，其实也就只考数学，让我们感受一下而已，当时我考了第二还是第一记不清了，不过有些高兴也有些骄傲，后来发现不是这样的，我以为就是数学英语这类课比较重要，其余的那些大家口中的水课我也是不太重视，以至于在大二大三提高总学分积上有些吃力。到大一下的时候有大四的分享保研经验时才知道有保研这回事，从此开启了学霸模式，大家喜欢这么叫，我其实并不怎么喜欢。从早上出去，基本上都是晚上10点左右回宿舍。在大二大三给我的感觉就是和我在高中没有什么区别，一学期十五六门课，作业都感觉没时间做，当然还有一些头疼的琐事，唯一的区别时没有人管你，你自己去安排自己的时间，我那时的状态可以借用一句话”沉迷于学习无法自拔“，当然这样必然会有些错过的东西，也许是一个亿，哈哈！也许是…其它。确实那一段时间并没有多少乐趣，过的有些枯燥，唯一有点点欣慰的是最后教务系统上出成绩了一看嗯还不错，总算有点收获，不然也许都坚持不下去。大三我们搬到市区了，但对于我来说没有什么区别，大唐西市就在隔壁，大三一年好像没去干过啥我总会说没人陪，这似乎成了一个借口。这段时间我唯一在乎的事情就是顺利拿到保研名额找到目标学校，各种准备各种关注，在今年暑假总算彻底完成了。虽然应该很高兴的，但是大四上学期我觉得过的并不是很充实，保研尘埃落定这段时间内似乎没有了学习的劲头，有空就睡懒觉看剧刷手机，大把的挥霍了时间，之前本来想的好好的保完研就做些有意思的东西，现在看来似乎是个笑话。总之大学里学习没有落下。</p>
<h3 id="生活方面"><a href="#生活方面" class="headerlink" title="生活方面"></a>生活方面</h3><p> 在大学四年里面除了学习只外当然还会接触到一些有趣的难忘的事情，我也是有好奇心的，刚来到大学我也报名了社团基地之类组织，但是那些什么乐队呀主持啊新闻啊之类的肯定跟我是无缘了，说白了我没有任何特长，普通得不能在普通了，我就加了微软俱乐部，但是我好像一次也没去过，那儿的人好像也一次也没找过我，我至今都不知道那里面是干啥的，有些吃惊。。。其他的一些什么搬桌子凳子我就更不可能去了，我好像没有那么的高尚无私，我可不想没有意义的在哪里搬东西收拾东西，目前作为预备党员似乎应该有点大公无私的精神哟！哈哈哈！我就欺骗一下我自己你们别当真！哈哈哈！还在ACM基地待过，但是由于水平不够，我又不想天天对着电脑成百上千的刷着机试题所以最后也没去。大二时我又报了一个机器人基地，最后也是由于类似原因半路退出，现在想想我好像不太能坚持看不到希望的事情，我原本是希望能通过基地或一两个奖的，但是由于各种乱七八糟的事情又放弃了。我没有完整的参加过一个社团，坚持不下来，但是感觉有些东西即使坚持了也许还是得不到，最近的一件事也是有些苦恼不知如何是好。在大一的时候班级聚餐或其他活动我也会去参加，跟大家一块玩，但是越往后去的越少，甚至都没有活动了。大学的班级不像高中，比较松散各玩各的。前两年都沉迷于学习，偶尔跟同学去几个景点逛逛，拍两张照片就很高兴了。只是这一学期倒还有些乐趣，和同学看了不少电影，也看了一两本书，以前是几乎不看的，所以最近总说原来这才是大学生活。。。在大学里面加了不少的好友，认识的不认识的，同班的不同班的都有，几乎都是男生，女生并不多，甚至我们班的女生都没有全加上。加的好友虽然多，但是常联系经常交流的并不多甚至说就那么几个，跟高中一样还在联系的就那么几个，一个手掌都能数完，一想到这难免有些难过。偶尔跟同学出去吃个饭聊聊天感觉还是很好的。昨天刚跟一个考完研的同学出去吃了饭，顺便看了个电影《芳华》没想到那么伤感。。。有一些感触，最近的状态不太适合看这种情感过于细腻的电影。我好像跑题了。。。一个朋友说我说话有点自娱自乐，好像很对呀哈哈哈！总之大学里面没完整参加过社团,没有到处闲逛，偶尔跟同学一起出去玩玩，感觉过得很平淡。</p>
<h3 id="有些遗憾的"><a href="#有些遗憾的" class="headerlink" title="有些遗憾的"></a>有些遗憾的</h3><p> 刚说了在大学里面虽然认识了很多人，但是那种经常联系一起吃饭聊天的不多，这也许是大学过的很枯燥很平淡的原因。机会只有一次，如果再给我一个机会结果可能还是会这样哈哈哈<del>~</del>有时有人问我有女朋友没有，我说我没有谈过恋爱哪来女朋友，有些人感觉很吃惊。我感觉很正常啊哈哈哈。。。再说也不容易遇到喜欢的人（不是眼光高哟）认识的女生也不多。偶尔会听到一个说法是大学就该谈恋爱，我也不知道是不是，哈哈不说了尴尬。还有我本打算在大学好好锻炼身体的，但是自己似乎总是有理由有借口，宁可坐着发呆睡懒觉也不想动，虽然我知道不好，但就是不想动不知道为什么，这是我最后悔的一件事。感觉大学里就没把学习落下，其余的什么事都没有做过。这大学几年看来过的并不完美。</p>
<p> 不管怎样，已经过去的无法在改变了，目前能做的就是最好未来的规划，也许还会同样的不完美，能做出一些改变也是好的。最近过的太悠闲，生活很没规律无所事事，也有一些事情比较纠结，总喜欢胡思乱想，希望能在元旦回去之后调整一下自己，希望在研究生阶段能弥补一些大学的遗憾，最起码要锻炼身体，其余的事再说，感觉我现在就开始讨价还价了。。。这样好像不好，希望不要给自己打脸，我看好我。最近有些颓废，马上就2018年了又老了一岁，希望自己写的这个垃圾文章能够警醒一下自己，革命尚未成功，仍需努力。fighting！！！</p>
]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>支持向量机</title>
    <url>/20171014_SVM/index.html</url>
    <content><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1507893605639&di=16fad19f6589ac2b2dc8cd4c7d74f1f3&imgtype=0&src=http%3A%2F%2Fsigvc.org%2Fwhy%2Fbook%2F3dp%2Fpaste2.files%2Fimage004.jpg" alt=""></p>
<p>支持向量机（SVM）是一个非常好的监督学习算法，由于这个算法涉及到的数学知识比较多，而且不容易弄懂，因此我额外补了一些拉格朗日对偶性的一些知识，还初步了解了以下凸优化的相关知识，建议如过想学SVM的先去学一些拉格朗日对偶问题以及一些凸优化的相关东西。终于能大致弄懂SVM的整个过程中所涉及到的一些东西，但是仍有一些地方还是不太明白，还有待继续学习。这里先对所掌握的过程进行回顾总结。</p>
<a id="more"></a>

<h3 id="Support-Vector-Machine-SVM"><a href="#Support-Vector-Machine-SVM" class="headerlink" title="Support Vector Machine (SVM)"></a>Support Vector Machine (SVM)</h3><p>支持向量机（SVM）是一个监督学习算法，它实质上是一种特征空间上的间隔最大的线性分类器，这其中涉及到核技巧将线性不可分问题映射成特征空间中的线性可分问题，因此支持向量机可以说是一个非线性分类器，它的学习策略就是间隔最大化，最后的问题可以转化为一个凸优化问题，使用拉格朗日对偶性来求解对偶问题，从而间接得到原问题的解，一般使用SMO算法来求对偶问题的解。</p>
<h4 id="间隔最大化"><a href="#间隔最大化" class="headerlink" title="间隔最大化"></a>间隔最大化</h4><p>支持向量机的思想就是间隔最大化，根据间隔最大化来构造原始问题。这里涉及到的间隔包括函数间隔和几何间隔，其中函数间隔为$\hat \gamma_i$<br>$$<br>\hat \gamma_i = y_i(\omega\cdot x_i + b) \tag{1}<br>$$<br>然后得到所有样本的函数间隔中的最小的一个$$\hat\gamma = \min_{i = 1,\cdots,N}(\hat\gamma_i)$$</p>
<p>几何间隔由空间中两点的实际距离定义记作$\gamma_i$<br>$$<br>\gamma_i = \dfrac{\omega}{||\omega||}\cdot x_i + \dfrac{b}{||\omega||}\tag{2}<br>$$<br>同理求出所有几何间隔最小的$$\gamma = \min_{i =1\cdots,N}(\gamma_i)$$</p>
<p>可以看出函数间隔是不唯一的，因为满足分离超平面$\omega^\ast\cdot x + b^\ast= 0$的参数$(\omega,b)$并不是唯一的，例如将$\omega$和$b$发你别扩大两倍后$2\omega^\ast\cdot x + 2b^\ast = 0$仍然成立，而函数间隔$\hat\gamma$会随着$(\omega , b)$变化。而几何距离却不会发生变化。</p>
<p>同时还可以看出函数间隔和几何间隔之间满足关系(3)<br>$$<br>\gamma = \dfrac{\hat\gamma}{||\omega||}\tag{3}<br>$$<br>因此这里考虑求解几何间隔最大的分离超平面，该问题则表示为下面的约束最优化问题<br>$$<br>\max_{\omega,b} \quad \gamma\tag{4}\\<br>s.t.\quad y_i(\dfrac{\omega}{||\omega||}\cdot x_i + \dfrac{b}{||\omega||}) \ge \gamma,\qquad i = 1,2,\cdots,N<br>$$<br>根据上述关系(3)将问题转换为<br>$$<br>\max_{\omega,b} \quad \dfrac{\hat\gamma}{||\omega||}\tag{5}\\<br>s.t.\quad y_i(\omega\cdot x_i + b) \ge \hat\gamma,\qquad i = 1,2,\cdots,N<br>$$<br>因为函数距离跟随$\omega$和$b$而变化，这里做出限制$\hat\gamma = 1$。而最大化$\dfrac{1}{||\omega||}$和最小化$\dfrac{1}{2}||\omega||^2$是等价的，因此，问题进一步转化为<br>$$<br>\min_{\omega, b}\quad\dfrac{1}{2}||\omega||^2\tag{6}\\<br>s.t.\quad y_i(\omega\cdot x_i + b) \ge 1,\qquad i = 1,2,\cdots,N<br>$$<br>问题(6)就是支持向量机需要解决的问题，即原始最优化问题，最终我们求得的分类决策函数是<br>$$<br>f(x) = \text{sign}(\omega^\ast\cdot x + b^\ast)\tag{7}<br>$$</p>
<h4 id="拉格朗日对偶性"><a href="#拉格朗日对偶性" class="headerlink" title="拉格朗日对偶性"></a>拉格朗日对偶性</h4><p>对上述问题(6)建立拉格朗日函数，引入拉格朗日乘子$\alpha_i \ge 0, \quad i = 1,2,\cdots,N$，定义拉格朗日函数为<br>$$<br>L(\omega,b,\alpha) = \dfrac{1}{2}||\omega||^2 - \sum_{i=1}^N\alpha_iy_i(\omega\cdot x_i + b) + \sum_{i = 1}^N\alpha_i\tag{8}<br>$$<br>分别对$\omega$和$b$求偏导令其为零然后带入到拉格朗日函数(8)中去，即得到其对偶问题(关于对偶的相关知识不在此陈述)<br>$$<br>\min_{\alpha}\quad\dfrac{1}{2}\sum_{i = 1}^{N}\sum_{j = 1}^N\alpha_i\alpha_jy_iy_j(x_i\cdot x_j) - \sum_{i = 1}^N\alpha_i\tag{9}\\<br>s.t.\quad \sum_{i = 1}^N\alpha_iy_i = 0\\<br>\alpha_i \ge 0, \quad i = 1,2,\cdots, N<br>$$<br>然而实际情况中，线性可分的情况是十分少的，一般都是近似线性可分的的，这里涉及到的是软间隔支持向量机，也称为线性支持向量机，是最基本的支持向量机。</p>
<p>对与近似线性可分的样本中的噪声样本通过引入一个松弛变量$\xi_i$，从而使其在一定的可接受的误差范围内可分，因此得到线性支持向量机的原始最优化问题<br>$$<br>\min_{\omega, b}\quad\dfrac{1}{2}||\omega||^2+C\sum_{i = 1}^N\xi_i\tag{10}\\<br>s.t.\quad y_i(\omega\cdot x_i + b) \ge 1 - \xi_i,\qquad i = 1,2,\cdots,N\\<br>\xi_i \ge 0, \quad i = 1,2,\cdots,N<br>$$<br>其对偶问题为<br>$$<br>\min_{\alpha}\quad\dfrac{1}{2}\sum_{i = 1}^{N}\sum_{j = 1}^N\alpha_i\alpha_jy_iy_j(x_i\cdot x_j) - \sum_{i = 1}^N\alpha_i\tag{11}\\<br>s.t.\quad \sum_{i = 1}^N\alpha_iy_i = 0\\<br>0 \le\alpha_i \le C, \quad i = 1,2,\cdots, N<br>$$<br>可一看到，他和线性可分支持向量机的唯一区别是$\alpha_i$的约束多了一个上限。</p>
<h4 id="非线性支持向量机与核技巧"><a href="#非线性支持向量机与核技巧" class="headerlink" title="非线性支持向量机与核技巧"></a>非线性支持向量机与核技巧</h4><p>对于输入空间中的分线性分类问题，可以通过非线性变换将它转换为某个高维特征空间中的线性分类问题，在高维空间中学习线性支持向量机。</p>
<p>输入空间到某个高维空间的转换是通过映射$\phi(x):\chi \to H$来完成的，对于$\forall x,z \in \chi$，函数$K(x,z)$满足条件$K(x,z) = \phi(x)\cdot\phi(z)$，则称函数$K(x,z)$为核函数。</p>
<p>目标函数与分类决策函数中都只涉及实例与实例之间的内积，因此并不需要显示的指定非线性变换，而是直接用核函数来代替内积，对偶问题则变为如下形式<br>$$<br>W(\alpha) = \dfrac{1}{2}\sum_{i = 1}^N\sum_{j = 1}^N\alpha_i\alpha_jy_iy_jK(x_i,x_j) - \sum_{i = 1}^N\alpha_i\tag{12}<br>$$<br>分类决策函数中的内积也用核函数来表示，则<br>$$<br>f(x) = \text{sign}(\sum_{i = 1}^{N_s}\alpha_i^{\ast}y_i\phi(x_i)\cdot\phi(x)+b^\ast) = \text{sign}(\sum_{i = 1}^{N_s}\alpha_i^\ast y_iK(x_i,x)+b^\ast)\tag{13}<br>$$<br>因此在线性支持向量机学习的对偶问题中使用核函数来代替内积即可解得非线性支持向量机。</p>
<h4 id="序列最小最优化算法（SMO）"><a href="#序列最小最优化算法（SMO）" class="headerlink" title="序列最小最优化算法（SMO）"></a>序列最小最优化算法（SMO）</h4><p>该算法分为两个部分分别是</p>
<blockquote>
<p>求解两个变量二次规划的解析方法</p>
<p>选择变量的启发式方法</p>
</blockquote>
<h5 id="两个变量的二次规划解析方法"><a href="#两个变量的二次规划解析方法" class="headerlink" title="两个变量的二次规划解析方法"></a>两个变量的二次规划解析方法</h5><p>假定选择两个变量$\alpha_1$和$\alpha_2$，而其它的变量$\alpha_i(i = 3,4,\cdots,N)$保持不变，则(12)式的子问题可以表示为<br>$$<br>\min_{\alpha_1,\alpha_2}\quad W(\alpha_1,\alpha_2) = \dfrac{1}{2}K_{11}\alpha_1^2+\dfrac{1}{2}K_{22}\alpha_2^2 + y_1y_2K_{12}\alpha_1\alpha_2 \\ \quad\quad\quad- (\alpha_1+\alpha_2) + y_1\alpha_1\sum_{i = 3}^{N}y_i\alpha_iK_{i1} + y_2\alpha_2\sum_{i = 3}^Ny_i\alpha_iK_{i2}\tag{14}\\s.t.\quad \alpha_1y_1 + \alpha_2y_2 = -\sum_{i = 3}^Ny_i\alpha_i = \zeta\\0 \le \alpha\le C,\quad i = 1,2<br>$$<br>将问题(14)中的等式约束$\alpha_1y_1 + \alpha_2y_2 = -\sum_{i = 3}^Ny_i\alpha_i = \zeta$进行变换，用$\alpha_2$来表示$\alpha_1$，将其代入到(14)式中，那么问题就变为关于变量$\alpha_2$的二次函数求极值的问题，求得$\alpha_2$之后通过等式$\alpha_1y_1 + \alpha_2y_2 = -\sum_{i = 3}^Ny_i\alpha_i = \zeta$即可得到$\alpha_1$的值。</p>
<h5 id="启发式变量选择方法"><a href="#启发式变量选择方法" class="headerlink" title="启发式变量选择方法"></a>启发式变量选择方法</h5><p>SMO称第一个变量的选择为外层循环，外层循环在训练样本中选取<code>违反KKT条件最严重</code>的样本点，并将其对应的变量作为第一个变量，具体的检验训练样本$(x_i, y_i)$是否满足KKT条件，即<br>$$<br>\alpha_i = 0 \Leftrightarrow y_i g(x_i) \ge 1\\ 0 \lt \alpha_i \lt C \Leftrightarrow y_ig(x_i) = 1\\ \alpha_i = C \Leftrightarrow y_ig(x_i) \le 1<br>$$<br>其中$g(x_i) = \sum_{j = 1}^N\alpha_jy_jK(x_i,x_j) + b$，改检验是在$\varepsilon$范围内进行的。</p>
<p>第二个变量的选择称为内层循环，在找到第一个变量$\alpha_1$的条件下，在内层循环中寻找第二个变量$\alpha_2$，第二个变量的选择标准是希望能够使$\alpha_2$尽量有足够大的变化。</p>
<p>关于SMO算法中的变量选择方法我目前并不是完全懂，先写到这里为止。</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>此次总结对之前学的支持向量机的相关知识进行了一次回顾，支持向量机结合核技巧是一个非常好的学习算法，它利用了拉格朗日问题的对偶性，将原问题转换为对偶问题，因为可能存在一种情况是每个样本的属性非常的多，也就是输入空间的维数非常的大，而转换为对偶问题之后，参数是和样本一一对应的，因此参数数目就是样本的数目，这能够大大减小计算的复杂度，最后对于求解凸二次规划问题有十分有效的SMO算法，因为子问题有解析解，因此每次计算子问题都十分的快，虽然子问题数目多，但是总体上看来还是很快的。</p>
]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>算法</tag>
        <tag>科研</tag>
      </tags>
  </entry>
</search>
